      {/* Testimonial Section */}
      <section ref={testimonialsRef} className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">What Our Customers Say</h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              Don't just take our word for it. Here's what Lokoja residents say about our service.
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            {testimonials.map((testimonial, index) => (
              <div
                key={index}
                className={`bg-gray-50 p-8 rounded-xl transition-all duration-700 ease-out hover:scale-105 hover:shadow-lg hover:bg-white group ${
                  visibleTestimonials[index] ? "translate-y-0 opacity-100" : "translate-y-10 opacity-0"
                }`}
              >
                {/* Stars  */}
                <div className="flex mb-4">
                  {[...Array(testimonial.rating)].map((_, i) => (
                    <Star
                      key={i}
                      size={20}
                      className="text-yellow-400 fill-current transition-all duration-300 hover:scale-125"
                      style={{ animationDelay: `${i * 100}ms` }}
                    />
                  ))}
                </div>

                {/* Testimonial Text */}
                <p className="text-gray-700 mb-6 leading-relaxed">"{testimonial.text}"</p>

                {/* Customer Info */}
                <div className="flex items-center">
                  <div className="w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center mr-4 transition-all duration-300 group-hover:bg-orange-200 group-hover:scale-110">
                    <span className="text-orange-600 font-semibold text-lg">
                      {testimonial.name
                        .split(" ")
                        .map((n) => n[0])
                        .join("")}
                    </span>
                  </div>
                  <div>
                    <p className="font-semibold text-gray-900 transition-colors duration-300 group-hover:text-orange-600">
                      {testimonial.name}
                    </p>
                    <p className="text-sm text-gray-600">{testimonial.location}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>





            <div className="p-8 py-12 md:py-6 bg-white rounded-lg w-full md:max-w-lg mx-auto h-auto md:shadow-md">
        <h2 className="text-2xl md:text-3xl font-bold bg-gradient-to-r from-yellow-600 to-amber-600 bg-clip-text text-transparent mb-2">Let's Get Started</h2>
        <p className="mb-6">Fill in the fields to get started.</p>
        <form
          className="flex flex-col gap-4 w-full mt-7"
          onSubmit={handleSubmit}
        >
          <InputField
            type="text"
            placeholder="Username"
            name="username"
            value={formData.username}
            onChange={handleChange}
          />
          <InputField
            type="email"
            placeholder="Email"
            name="email"
            value={formData.email}
            onChange={handleChange}
          />
          <InputField
            type="password"
            placeholder="Password"
            name="password"
            value={formData.password}
            onChange={handleChange}
          />
          {!Object.values(passwordCriteria).every(Boolean) && (
            <div className="text-sm text-gray-600 mt-1">
              <ul>
                <li
                  className={`${
                    passwordCriteria.minLength
                      ? "text-green-600"
                      : "text-red-600"
                  }`}
                >
                  At least 6 characters
                </li>
                <li
                  className={`${
                    passwordCriteria.uppercase
                      ? "text-green-600"
                      : "text-red-600"
                  }`}
                >
                  At least one uppercase letter
                </li>
                <li
                  className={`${
                    passwordCriteria.lowercase
                      ? "text-green-600"
                      : "text-red-600"
                  }`}
                >
                  At least one lowercase letter
                </li>
                <li
                  className={`${
                    passwordCriteria.numeric ? "text-green-600" : "text-red-600"
                  }`}
                >
                  At least one numeric character
                </li>
                <li
                  className={`${
                    passwordCriteria.specialChar
                      ? "text-green-600"
                      : "text-red-600"
                  }`}
                >
                  At least one special character
                </li>
              </ul>
            </div>
          )}
          <div className="flex items-center gap-2 my-3">
            <input
              type="checkbox"
              name="agreeToTerms"
              checked={formData.agreeToTerms}
              onChange={handleChange}
            />
            <p className="text-sm">
              I agree to the Terms and Conditions & Privacy Policy
            </p>
          </div>
          <div className="mb-[50px] md:mb-2" />
          <Button label="Proceed" />
        </form>
        <p className="text-center text-sm mt-4">
          Already have an account?{" "}
          <a href="/authentication/signin" className="text-yellow-400">
            Sign In
          </a>
        </p>
      </div>








            console.log("üì¶ Stores button clicked");

      const userData = localStorage.getItem('user_data');

      if (userData) {
        try {
          const userDataObj = JSON.parse(userData);
          const token = userDataObj?.accessToken;

          if (!token) {
            console.warn("‚ö†Ô∏è accessToken not found in user_data");
            return;
          }

          const redirectURL = `https://stores.theparcel.com.ng/?token=${encodeURIComponent(token)}`;
          console.log("üîó Redirecting to:", redirectURL);
          window.location.href = redirectURL;
        } catch (err) {
          console.error("‚ùå Failed to parse user_data:", err);
        }
      } else {
        console.warn("‚ö†Ô∏è No user_data found in localStorage");
      }